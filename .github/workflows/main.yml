name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run Bicep linter
      run: az bicep build --file deploy/main.bicep

  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Sign in to Azure
      uses: azure/CLI@v1
      with:
        azcliversion: 2.50.0
        inlineScript: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - uses: azure/arm-deploy@v1
      name: Run preflight validation
      with:
        deploymentName: ${{ github.run_number }}
        resourceGroupName: 'rg-time-away'
        template: ./deploy/main.bicep
        parameters: environmentType=${{ env.ENVIRONMENT_TYPE }}
        deploymentMode: Validate

  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: [lint, validate]
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false            

      # Step to extract Static Web App name from parameters.json
      - name: Extract Static Web App Name
        id: extract_static_web_app_name
        run: |
          STATIC_WEB_APP_NAME=$(jq -r '.parameters.staticWebAppName.value' bicep/parameters.json)
          echo "STATIC_WEB_APP_NAME=$STATIC_WEB_APP_NAME" >> $GITHUB_ENV

      # Step to deploy the Bicep template
      - name: Deploy Bicep Template
        uses: azure/CLI@v1
        with:
          azcliversion: 2.50.0
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            az deployment group create --resource-group rg-time-away --template-file deploy/main.bicep --parameters @bicep/parameters.json

      # Step to get the API key using the extracted Static Web App name
      - name: Get API key ðŸ”‘
        id: static_web_app_apikey
        uses: azure/CLI@v2
        with:
          inlineScript: |
            APIKEY=$(az staticwebapp secrets list --name ${{ env.STATIC_WEB_APP_NAME }} --query properties.apiKey -o tsv)
            echo "APIKEY=$APIKEY" >> $GITHUB_OUTPUT

      # Step to build and deploy the Static Web App
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.static_web_app_apikey.outputs.APIKEY }} 
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "/src"
          api_location: "api"
          output_location: "/src"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WHITE_MOSS_0F935A403 }}
          action: "close"
